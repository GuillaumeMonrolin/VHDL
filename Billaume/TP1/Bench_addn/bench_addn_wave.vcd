$date
  Wed Nov  4 13:41:16 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module bench_addn $end
$var reg 4 ! a_s[3:0] $end
$var reg 4 " a_u[3:0] $end
$var reg 4 # b_s[3:0] $end
$var reg 1 $ r_s $end
$var reg 4 % s_s[3:0] $end
$scope module addn1 $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 4 ( s[3:0] $end
$var reg 1 ) r $end
$var reg 5 * carry[4:0] $end
$scope module addn_inst(0) $end
$scope module add_inst $end
$var reg 1 + a $end
$var reg 1 , b $end
$var reg 1 - cin $end
$var reg 1 . s $end
$var reg 1 / cout $end
$upscope $end
$upscope $end
$scope module addn_inst(1) $end
$scope module add_inst $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 s $end
$var reg 1 4 cout $end
$upscope $end
$upscope $end
$scope module addn_inst(2) $end
$scope module add_inst $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 cin $end
$var reg 1 8 s $end
$var reg 1 9 cout $end
$upscope $end
$upscope $end
$scope module addn_inst(3) $end
$scope module add_inst $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < cin $end
$var reg 1 = s $end
$var reg 1 > cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0001 "
b0110 #
0$
b0111 %
b0001 &
b0110 '
b0111 (
0)
b00000 *
1+
0,
0-
1.
0/
00
11
02
13
04
05
16
07
18
09
0:
0;
0<
0=
0>
#5000000
b0010 !
b0010 "
b1000 %
b0010 &
b1000 (
b01100 *
0+
0.
10
03
14
17
08
19
1<
1=
#10000000
b0011 !
b0011 "
b1001 %
b0011 &
b1001 (
1+
1.
#15000000
b0100 !
b0100 "
b1010 %
b0100 &
b1010 (
b01000 *
0+
0.
00
13
04
15
07
08
#20000000
b0101 !
b0101 "
b1011 %
b0101 &
b1011 (
1+
1.
#25000000
b0110 !
b0110 "
b1100 %
b0110 &
b1100 (
b01100 *
0+
0.
10
03
14
17
18
#30000000
b0111 !
b0111 "
b1101 %
b0111 &
b1101 (
1+
1.
#35000000
b1000 !
b1000 "
0$
b1110 %
b1000 &
b1110 (
0)
b00000 *
0+
0.
00
13
04
05
07
18
09
1:
0<
1=
0>
#40000000
b1001 !
b1001 "
b1111 %
b1001 &
b1111 (
1+
1.
#45000000
b1010 !
b1010 "
1$
b0000 %
b1010 &
b0000 (
1)
b11100 *
0+
0.
10
03
14
17
08
19
1<
0=
1>
#50000000
b1011 !
b1011 "
b0001 %
b1011 &
b0001 (
1+
1.
#55000000
b1100 !
b1100 "
b0010 %
b1100 &
b0010 (
b11000 *
0+
0.
00
13
04
15
07
08
#60000000
b1101 !
b1101 "
b0011 %
b1101 &
b0011 (
1+
1.
#65000000
b1110 !
b1110 "
b0100 %
b1110 &
b0100 (
b11100 *
0+
0.
10
03
14
17
18
#70000000
b1111 !
b1111 "
b0101 %
b1111 &
b0101 (
1+
1.
#75000000
b0000 !
b0000 "
0$
b0110 %
b0000 &
b0110 (
0)
b00000 *
0+
0.
00
13
04
05
07
18
09
0:
0<
0=
0>
#80000000
b0001 !
b0001 "
b0111 %
b0001 &
b0111 (
1+
1.
#85000000
b0010 !
b0010 "
b1000 %
b0010 &
b1000 (
b01100 *
0+
0.
10
03
14
17
08
19
1<
1=
#90000000
b0011 !
b0011 "
b1001 %
b0011 &
b1001 (
1+
1.
#95000000
b0100 !
b0100 "
b1010 %
b0100 &
b1010 (
b01000 *
0+
0.
00
13
04
15
07
08
#100000000
b0101 !
b0101 "
b1011 %
b0101 &
b1011 (
1+
1.
